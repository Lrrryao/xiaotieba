// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: email.sql

package db

import (
	"context"
	"database/sql"
)

const createVerifyEmail = `-- name: CreateVerifyEmail :one

 INSERT INTO verify_emails(
    username,
    email,
    secret_code
 )VALUES(
    $1,$2,$3

 )RETURNING id, username, email, secret_code, is_secret_used, secret_created_at, secret_expired_at
`

type CreateVerifyEmailParams struct {
	Username   sql.NullString `json:"username"`
	Email      sql.NullString `json:"email"`
	SecretCode string         `json:"secret_code"`
}

func (q *Queries) CreateVerifyEmail(ctx context.Context, arg CreateVerifyEmailParams) (VerifyEmail, error) {
	row := q.db.QueryRowContext(ctx, createVerifyEmail, arg.Username, arg.Email, arg.SecretCode)
	var i VerifyEmail
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.Email,
		&i.SecretCode,
		&i.IsSecretUsed,
		&i.SecretCreatedAt,
		&i.SecretExpiredAt,
	)
	return i, err
}
